## Get Code and Build venv
FROM python:3.9 as build

ARG REPO=https://github.com/Arksine/moonraker
ARG VERSION=master

WORKDIR /opt

RUN git clone ${REPO} moonraker \
  && cd moonraker \
  && git checkout ${VERSION}

RUN python -m venv venv \
  && venv/bin/pip install -r moonraker/scripts/moonraker-requirements.txt

## Runtime Image
FROM python:3.9-slim as run

ENV DEBIAN_FRONTEND="noninteractive"

RUN apt-get update \
  && apt-get install -y \
    libopenjp2-7 \
    python3-libgpiod \
    curl \
    ffmpeg \
    git \
    iproute2 \
    libcurl4-openssl-dev \
    libssl-dev \
    liblmdb0 \
    libsodium-dev \
    wget \
    zlib1g-dev \
  && apt-get clean

WORKDIR /opt
COPY --from=build /opt/moonraker ./moonraker
COPY --from=build /opt/venv ./venv

RUN mkdir run cfg gcode db
RUN groupadd moonraker --gid 1000 \
  && useradd moonraker --uid 1000 --gid moonraker \
  && usermod moonraker --append --groups dialout \
  && chown -R moonraker:moonraker /opt/*

RUN git clone https://github.com/mainsail-crew/moonraker-timelapse.git /lib/moonraker-timelapse \
  && ln -s /lib/moonraker-timelapse/component/timelapse.py /opt/moonraker/moonraker/components/

ENV PATH="/opt/vc/bin:${PATH}"

## Start Moonraker
USER moonraker
EXPOSE 7125
VOLUME ["/opt/run", "/opt/cfg", "/opt/gcode", "/opt/db"]
ENTRYPOINT ["/opt/venv/bin/python", "moonraker/moonraker/moonraker.py"]
CMD ["-c", "cfg/moonraker.cfg"]

HEALTHCHECK --start-period=5s \
  CMD curl --fail --silent http://localhost:7125/printer/info || exit 1
